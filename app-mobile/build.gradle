plugins {
    id 'com.android.application'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    def currentVersionCode = getVersionCode()
    def currentVersionName = getVersionName()

    defaultConfig {
        applicationId "com.vodbyte.movie"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode currentVersionCode
        versionName "3." + currentVersionName
        flavorDimensions "versionCode"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi','armeabi-v7a'
        }
    }


    signingConfigs {
        config {
            keyAlias ''
            keyPassword ''
            storeFile file('../vodbyte.jks')
            storePassword ''
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    productFlavors {

        dev {
            applicationId "com.xxxx.app"
            resValue("string", "app_name", "开发调试")
            buildConfigField("String", "UMENG_APPKEY", '""')
           buildConfigField("String", "BASE_API_URL", '"http://vodev.www.com"')
            buildConfigField("boolean", "isDemo", "false")
        }

    }

    buildTypes {

        debug {
            minifyEnabled false
            signingConfig signingConfigs.config
            buildConfigField("boolean", "isDebug", "true")
        }

        release {
            minifyEnabled true
            shrinkResources true //去除无用资源
            zipAlignEnabled true   //是否启用zipAlign压缩
            signingConfig signingConfigs.config
            buildConfigField("boolean", "isDebug", "false")
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    //4.1 配置
    applicationVariants.all { variant ->
        variant.outputs.all { output->
            outputFileName = "../../../../../../outputs/${variant.name}_${variant.applicationId}_${variant.versionName}_${variant.versionCode}.apk"
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    sourceSets {
        main {
            res.srcDirs = [
                    'src/main/res',
                    'src/main/res/layouts/',
                    'src/main/res/layouts/main'
            ]
            jni.srcDirs = []
            jniLibs.srcDirs = ['libs']
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/beans.xml'
    }
}

def getVersionName() {
    def date = new Date();
    def versionName = date.format('MMdd');
    return versionName
}

def getVersionCode() {// 获取版本号
    def versionFile = file('version.properties')// 读取第一步新建的文件
    if (versionFile.canRead()) {// 判断文件读取异常
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionFile))
        def versionCode = versionProps['VERSION_CODE'].toInteger()// 读取文件里面的版本号
      //  def runTasks = gradle.startParameter.taskNames
        //if ('release' in runTasks ) {//仅在assembleRelease任务是增加版本号,其他渠道包在此分别配置
            // 版本号自增之后再写入文件（此处是关键，版本号自增+1）
            versionProps['VERSION_CODE'] = (++versionCode).toString()
            versionProps.store(versionFile.newWriter(), null)
       // }
        return versionCode // 返回自增之后的版本号
    } else {
        throw new GradleException("Could not find version.properties!")
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'

    implementation fileTree(dir: 'libs_fiio', include: ['*.jar','*.aar'])
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:28.0.0'
    //noinspection GradleCompatible
    implementation 'com.android.support:design:28.0.0'//快手 sdk 需要的

    implementation project(':easy_rv_adapter')
    implementation project(':dkplayer-videocache')
    implementation project(':comment_view')

    implementation 'com.alibaba:fastjson:1.2.58'
    implementation 'com.orhanobut:logger:2.2.0'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation (name:'webrtc', ext:'aar')

    // 3.12.x 兼容android4.4
    implementation 'com.squareup.okhttp3:okhttp:4.3.1'

    // 友盟基础组件库（所有友盟业务SDK都依赖基础组件库）
    implementation "com.umeng.umsdk:common:9.4.0"  //（必选）
    implementation "com.umeng.umsdk:asms:1.2.3" // asms包依赖(必选)

    // eventBus
    implementation 'org.greenrobot:eventbus:3.2.0'
    implementation 'com.youth.banner:banner:1.4.10'
    implementation 'com.hyman:flowlayout-lib:1.1.2'
    implementation 'com.jakewharton:butterknife:10.2.3'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'
    implementation 'org.jetbrains:annotations:21.0.1'
    implementation 'com.tencent.bugly:crashreport:3.3.92'
    implementation 'com.github.li-xiaojun:XPopup:2.3.7'

    // Cling library
    implementation 'org.fourthline.cling:cling-core:2.1.1'
    implementation 'org.fourthline.cling:cling-support:2.1.1'
    // Jetty library
    implementation 'org.eclipse.jetty:jetty-server:8.1.12.v20130726'
    implementation 'org.eclipse.jetty:jetty-servlet:8.1.12.v20130726'
    implementation 'org.eclipse.jetty:jetty-client:8.1.12.v20130726'
    implementation project(path: ':library-share')

    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'
    implementation 'com.google.code.gson:gson:2.8.7'
    implementation 'io.reactivex:rxjava:1.3.8'
    implementation 'io.reactivex:rxandroid:1.2.1'

    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation 'org.litepal.android:java:3.0.0'
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.5.1'
    implementation 'jp.wasabeef:glide-transformations:4.3.0'

    implementation 'io.reactivex.rxjava2:rxjava:2.2.21'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
    implementation 'com.github.LinYaoTian:LeavesLoading:1.0.2'
    implementation 'com.github.bumptech.glide:glide:4.12.0'

    //播放器
    implementation project(path: ':dkplayer-players:ijk')
    implementation project(path: ':dkplayer-players:exo')
    implementation project(path: ':dkplayer-ui')
    implementation project(path: ':dkplayer-java')

    //弹幕库
    implementation 'com.github.ctiao:DanmakuFlameMaster:0.9.25'
    //在线更新
    implementation 'com.github.AlexLiuSheng:CheckVersionLib:2.4.1_androidx'
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.5@aar'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}


